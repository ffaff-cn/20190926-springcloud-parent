server.port=8081
server.servlet.context-path=/

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/book?useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

mybatis.type-aliases-package=com.aaa.ffaff.springcloud.model
mybatis.mapper-locations=classpath:mapper/*Mapper.xml


# 配置eureka的注册地址(实现provider这个客户端注册进了eureka中)
# GreenWich RS.3:无论是单点解还是集群模式，eureka的服务器端和客户端的命名空间必要保持一致，否则会报错(找不到服务实例)
eureka.client.service-url.defaultZone=http://eureka01:7081/eureka,http://eureka02:7082/eureka,http://eureka03:7083/eureka 

#配置服务在eureka主页中APPLICATION的名称
spring.application.name=user-provider
# 是在eureka中配置实例的名字(也就是说Eureka的Status下的显示的名字,不允许重复)
eureka.instance.instance-id=user-provider-8081

# 在eureka中显示IP地址，鼠标悬浮在服务名上时，在左下角提示的信息，将localhost替换成IP地址（本机的内网id）
eureka.instance.prefer-ip-address=true



# 点击eureka的服务名显示出该服务的具体信息（作为提示信息描述该服务）
# 根据服务的具体内容，作者，公司，以及对整个服务的描述来进行显示
# 相当于在HTML页面上有一个a标签<a href="/actuator/info"></a> --> 跳转到controller:@RequestMapping("/actuator/info")
# !!只要开头是用info，可以写任何信息
info.author.name=Li Feng
info.company.name=AAA SOFTWARE EDU
info.project.description=This is Demo

# 规定自己向eureka发送心跳的时间（单位：秒）
#eureka.instance.lease-renewal-interval-in-seconds=5

#设置最后一次检测时检测8秒之后还是无法检测心跳的时候就直接剔除该provider 该出的时间必须大于provider向eureka发送心跳的时间
#eureka.instance.lease-expiration-duration-in-seconds=8
